#!/usr/bin/env python3
# This file is placed in the Public Domain.
#
# pylint: disable=C0413,W0212,W0718,W0612


"daemon"


import getpass
import os
import pwd
import sys
import time


from objx.object import Default, cdir
from objx.run    import init, scan
from objx.thread import errors, later


Cfg             = Default()
Cfg.dis         = ""
Cfg.name        = "objx"
Cfg.mod         = "irc,rss"
Cfg.version     = "558"
Cfg.opts        = ""
Cfg.wdr         = os.path.expanduser(f"~/.{Cfg.name}")
Cfg.mdir        = os.path.join(Cfg.wdr, "mods")
Cfg.pidfile     = os.path.join(Cfg.wdr, f"{Cfg.name}.pid")


def daemon(verbose=False):
    "switch to background."
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    pid2 = os.fork()
    if pid2 != 0:
        os._exit(0)
    if not verbose:
        with open('/dev/null', 'r', encoding="utf-8") as sis:
            os.dup2(sis.fileno(), sys.stdin.fileno())
        with open('/dev/null', 'a+', encoding="utf-8") as sos:
            os.dup2(sos.fileno(), sys.stdout.fileno())
        with open('/dev/null', 'a+', encoding="utf-8") as ses:
            os.dup2(ses.fileno(), sys.stderr.fileno())
    os.umask(0)
    os.chdir("/")


def getmods(path, modname="mods"):
    "return modules"
    path = os.path.dirname(path)
    if path not in sys.path:
        sys.path.insert(0, path)
    return __import__(modname)


def pidfile(path):
    "create pidfile"
    if os.path.exists(path):
        os.unlink(path)
    cdir(path)
    with open(path, "w", encoding="utf-8") as fds:
        fds.write(str(os.getpid()))


def privileges(username):
    "drop privileges."
    pwnam = pwd.getpwnam(username)
    os.setgid(pwnam.pw_gid)
    os.setuid(pwnam.pw_uid)


def wrap(func):
    "restore console."
    try:
        func()
    except (KeyboardInterrupt, EOFError):
        if "-d" not in sys.argv:
            print("")
    except Exception as ex:
        later(ex)
    if "v" in Cfg.opts:
        errors()


def main():
    "main"
    Cfg.user = getpass.getuser()
    if "-d" in sys.argv:
        daemon("-v" in sys.argv)
    pidfile(Cfg.pidfile)
    privileges(Cfg.user)
    modules = getmods(Cfg.mdir)
    Cfg.mod = ",".join(dir(modules))
    scan(modules, Cfg.mod)
    init(modules, Cfg.mod)
    while 1:
        time.sleep(1.0)


if __name__ == "__main__":
    wrap(main)
